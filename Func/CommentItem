using System.Collections;
using System.Collections.Generic;
using UnityEngine;
using UnityEngine.UI;
using UnityEngine.EventSystems;
/// <summary>
///   public int id;
///public int user_id;
///public string nickname;
///public string cmt_txt;
///public bool like_yn;
///public string reg_dtm;
///public int top_comment_id;
/// </summary>
public class CommentItem : MonoBehaviour
{
    UIPostView postview = null;
    [SerializeField] HorizontalLayoutGroup HorizontalPadding;

    [SerializeField] Button Btn_nestedReply;
    [SerializeField] Button Btn_report;
    [SerializeField] Button Btn_delete;
    [SerializeField] Image Img_Like;

    [SerializeField] Text Text_nickname;
    [SerializeField] Text Text_animal;
    [SerializeField] Text Text_uploadtime;
    [SerializeField] Text Text_context;
    [SerializeField] Text Text_likecount;
    [SerializeField] Text Text_moreComment;

    List<CommentItem> nestedItemList = new List<CommentItem>();
    int nestedItemList_Display_Index = 0;
    public int _parentIndex;
    CommunityInfo.reply _reply;

    private void Start()
    {
        SetListener();
    }
    public void AddNestedReply(CommentItem _nestedItem)
    {
        if(nestedItemList.Count > 0)
            _nestedItem.transform.SetSiblingIndex(nestedItemList[nestedItemList.Count - 1].transform.GetSiblingIndex() + 1);
        else
            _nestedItem.transform.SetSiblingIndex(transform.GetSiblingIndex() + 1);
        nestedItemList.Add(_nestedItem);
        
        if(_nestedItem.gameObject.activeSelf == false)
        {
            nestedItemList_Display_Index++;
            Text_moreComment.text = "...답글 " + nestedItemList.Count + "개 모두보기";
            Text_moreComment.gameObject.SetActive(true);
        }
    }
    void ClearNestedItem()
    {
        foreach (CommentItem _item in nestedItemList)
            _item.ClearNestedItem();
    }
    public void ClearObjectActivation()
    {
        gameObject.SetActive(false);
        Img_Like.gameObject.SetActive(true);
        Text_likecount.gameObject.SetActive(true);
        Text_moreComment.gameObject.SetActive(false);
    }
    public void ClearSetting()
    {
        _reply = default(CommunityInfo.reply);
        ClearNestedItem();
        ClearObjectActivation();
        //클리어 
    }
    public void Setting(CommunityInfo.reply _newReply,UIPostView _postview)
    {
        postview = _postview;
        _reply = _newReply;
        if (_reply.Equals(default(CommunityInfo.reply)))
            return;
        Text_nickname.text = _reply.nickname;
        Text_animal.text = _reply.animal;
        Text_uploadtime.text = Utility.HowMuchTimeAtNowTime(_reply.reg_dtm);
        Text_context.text = _reply.cmt_txt;
        Text_likecount.text = _reply.like_count.ToString();
        Text_moreComment.text = _reply.animal;
        if (_reply.top_comment_id != 0)
        {
            postview.FindParentNestedItem(this, _reply.top_comment_id);
            _parentIndex = 0;
            HorizontalPadding.padding.left += 120;
        }
        else
        {
            HorizontalPadding.padding.left = 0;
            _parentIndex = _reply.id;
            gameObject.SetActive(true);
        }
        //세팅
        if (_reply.like_yn)
            Img_Like.color = Color.red;
        else
            Img_Like.color = Color.gray;
        LayoutRebuilder.ForceRebuildLayoutImmediate(gameObject.GetComponent<RectTransform>());
    }
    void SetListener()
    {
        Utility.SetEventtrigger(Text_nickname.gameObject, OnClickNickname, EventTriggerType.PointerClick);
        Utility.SetEventtrigger(Text_moreComment.gameObject, OnClickMoreComment, EventTriggerType.PointerClick);
        Utility.SetEventtrigger(Img_Like.gameObject, OnClickLike, EventTriggerType.PointerClick);

        Btn_nestedReply.onClick.AddListener(OnClicknestedReply);
        Btn_report.onClick.AddListener(OnClickReport);
        Btn_delete.onClick.AddListener(OnClickDelete);
    }

    void OnClickNickname()
    {
        Debug.Log("닉네임누름");
    }
    void OnClickMoreComment()
    {
        int start_index = nestedItemList_Display_Index - 1;
        int end_index = nestedItemList_Display_Index - 4;
        for(int i = start_index; i >= end_index; i--)
        {
            nestedItemList[i].gameObject.SetActive(true);
            nestedItemList_Display_Index--;
        }
    }
    void OnClickLike()
    {
        if(_reply.like_yn)
        {
            _reply.like_yn = false;
            Img_Like.color = Color.gray;
        }
        else
        {
            _reply.like_yn = true;
            Img_Like.color = Color.red;
        }
    }
    void OnClickReport()
    {
        Debug.Log("신고하기누름");
    }
    void OnClickDelete()
    {
        Text_context.text = "삭제된 답글입니다.";
        Img_Like.gameObject.SetActive(false);
        Text_likecount.gameObject.SetActive(false);
        Text_moreComment.gameObject.SetActive(false);
    }
    void OnClicknestedReply()
    {
        if (_parentIndex != 0)
        {
            postview.SetNestedReply(_reply.nickname, _reply.id, _parentIndex);
        }
        else
        {
            postview.SetNestedReply(_reply.nickname, _reply.id, _reply.top_comment_id);
        }
    }
}
